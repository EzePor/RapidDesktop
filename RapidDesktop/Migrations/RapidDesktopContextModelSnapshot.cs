// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RapidDesktop.Data;

#nullable disable

namespace RapidDesktop.Migrations
{
    [DbContext(typeof(RapidDesktopContext))]
    partial class RapidDesktopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RapidDesktop.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dirección")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<string>("Teléfono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocalidadId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApellidoNombre = "Mamadera Roberto",
                            Dirección = "Maipú 2255",
                            Email = "robertomam@gmail.com",
                            Teléfono = "1563554"
                        },
                        new
                        {
                            Id = 2,
                            ApellidoNombre = "Catrasca Dalmiro",
                            Dirección = "Corrientes 1698",
                            Email = "catradalmiro@gmail.com",
                            Teléfono = "15569753"
                        },
                        new
                        {
                            Id = 3,
                            ApellidoNombre = "Tandarika José Luis",
                            Dirección = "3 de Febrero 986",
                            Email = "tandajoseluis@gmail.com",
                            Teléfono = "1541122"
                        });
                });

            modelBuilder.Entity("RapidDesktop.Models.Fabricante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fabricantes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "fujifilm@fujifilm.com",
                            Nacionalidad = "Japón",
                            Nombre = "FujiFilm"
                        },
                        new
                        {
                            Id = 2,
                            Email = "newtalent@newtalent.com",
                            Nacionalidad = "EE.UU.",
                            Nombre = "NewTalent SA"
                        },
                        new
                        {
                            Id = 3,
                            Email = "generalelectric@generalelectric.com",
                            Nacionalidad = "España",
                            Nombre = "General Electric"
                        },
                        new
                        {
                            Id = 4,
                            Email = "marandsa@gmail.com",
                            Nacionalidad = " Argentina",
                            Nombre = "Marand SA"
                        },
                        new
                        {
                            Id = 5,
                            Email = "dkotasa@dakotasa.com",
                            Nacionalidad = "China",
                            Nombre = "D-kota SA"
                        });
                });

            modelBuilder.Entity("RapidDesktop.Models.Localidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinciaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Localidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodigoPostal = "3040",
                            Nombre = "San Justo"
                        },
                        new
                        {
                            Id = 2,
                            CodigoPostal = "3042",
                            Nombre = "Videla"
                        },
                        new
                        {
                            Id = 3,
                            CodigoPostal = "3048",
                            Nombre = "Soledad"
                        });
                });

            modelBuilder.Entity("RapidDesktop.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FabricanteId")
                        .HasColumnType("int");

                    b.Property<string>("GarantiaFabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int?>("RubroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FabricanteId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("RubroId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GarantiaFabricante = "1 año",
                            Nombre = "Reloj SmartWatch W26",
                            Precio = 15000.00m
                        },
                        new
                        {
                            Id = 2,
                            GarantiaFabricante = "100 años",
                            Nombre = "Foto 13x18",
                            Precio = 300.00m
                        },
                        new
                        {
                            Id = 3,
                            GarantiaFabricante = "6 meses",
                            Nombre = "Funda Motorola G22",
                            Precio = 3000.00m
                        },
                        new
                        {
                            Id = 4,
                            GarantiaFabricante = "1 año",
                            Nombre = "Combo mouse y teclado gamer",
                            Precio = 11900.00m
                        });
                });

            modelBuilder.Entity("RapidDesktop.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teléfono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "dipromas@dipromas.com",
                            Nombre = "Dipromas SRL",
                            Teléfono = "035148445566"
                        },
                        new
                        {
                            Id = 2,
                            Email = "shoppcell@gmail.com",
                            Nombre = "ShoppCell",
                            Teléfono = "01145553322"
                        },
                        new
                        {
                            Id = 3,
                            Email = "hunistorsa@yahoo.com",
                            Nombre = "Hunistor SA",
                            Teléfono = "01155443322"
                        });
                });

            modelBuilder.Entity("RapidDesktop.Models.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Provincias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Santa Fe"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Entre Ríos"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Córdoba"
                        });
                });

            modelBuilder.Entity("RapidDesktop.Models.Rubro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rubros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Fotografía"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Accesorios para celulares"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Relojería"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Informática"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Electrónica"
                        });
                });

            modelBuilder.Entity("RapidDesktop.Models.Cliente", b =>
                {
                    b.HasOne("RapidDesktop.Models.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadId");

                    b.Navigation("Localidad");
                });

            modelBuilder.Entity("RapidDesktop.Models.Localidad", b =>
                {
                    b.HasOne("RapidDesktop.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("RapidDesktop.Models.Producto", b =>
                {
                    b.HasOne("RapidDesktop.Models.Fabricante", "Fabricante")
                        .WithMany()
                        .HasForeignKey("FabricanteId");

                    b.HasOne("RapidDesktop.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId");

                    b.HasOne("RapidDesktop.Models.Rubro", "Rubro")
                        .WithMany()
                        .HasForeignKey("RubroId");

                    b.Navigation("Fabricante");

                    b.Navigation("Proveedor");

                    b.Navigation("Rubro");
                });
#pragma warning restore 612, 618
        }
    }
}
